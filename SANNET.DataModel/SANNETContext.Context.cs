//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SANNET.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SANNETContext : DbContext
    {
        public SANNETContext()
            : base("name=SANNETContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<NetworkConfiguration> NetworkConfigurations { get; set; }
        public virtual DbSet<Prediction> Predictions { get; set; }
    
        public virtual ObjectResult<GetFutureFiveDayPerformance_Result> GetFutureFiveDayPerformance(Nullable<int> companyId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> riseMultiplierTrigger, Nullable<decimal> fallMultiplierTrigger)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var riseMultiplierTriggerParameter = riseMultiplierTrigger.HasValue ?
                new ObjectParameter("riseMultiplierTrigger", riseMultiplierTrigger) :
                new ObjectParameter("riseMultiplierTrigger", typeof(decimal));
    
            var fallMultiplierTriggerParameter = fallMultiplierTrigger.HasValue ?
                new ObjectParameter("fallMultiplierTrigger", fallMultiplierTrigger) :
                new ObjectParameter("fallMultiplierTrigger", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFutureFiveDayPerformance_Result>("GetFutureFiveDayPerformance", companyIdParameter, startDateParameter, endDateParameter, riseMultiplierTriggerParameter, fallMultiplierTriggerParameter);
        }
    
        public virtual ObjectResult<GetTrainingDataset1_Result> GetTrainingDataset1(Nullable<int> companyId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTrainingDataset1_Result>("GetTrainingDataset1", companyIdParameter, startDateParameter, endDateParameter);
        }
    }
}
